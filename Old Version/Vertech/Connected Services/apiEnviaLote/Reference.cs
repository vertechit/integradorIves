//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vertech.apiEnviaLote {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0", ConfigurationName="apiEnviaLote.ServicoEnviarLoteEventos")]
    public interface ServicoEnviarLoteEventos {
        
        // CODEGEN: Gerando contrato de mensagem porque o nome do elemento loteEventos no namespace http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0 não está marcado como nulo
        [System.ServiceModel.OperationContractAttribute(Action="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0/ServicoEn" +
            "viarLoteEventos/EnviarLoteEventos", ReplyAction="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0/ServicoEn" +
            "viarLoteEventos/EnviarLoteEventosResponse")]
        Vertech.apiEnviaLote.EnviarLoteEventosResponse EnviarLoteEventos(Vertech.apiEnviaLote.EnviarLoteEventosRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0/ServicoEn" +
            "viarLoteEventos/EnviarLoteEventos", ReplyAction="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0/ServicoEn" +
            "viarLoteEventos/EnviarLoteEventosResponse")]
        System.Threading.Tasks.Task<Vertech.apiEnviaLote.EnviarLoteEventosResponse> EnviarLoteEventosAsync(Vertech.apiEnviaLote.EnviarLoteEventosRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnviarLoteEventosRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnviarLoteEventos", Namespace="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0", Order=0)]
        public Vertech.apiEnviaLote.EnviarLoteEventosRequestBody Body;
        
        public EnviarLoteEventosRequest() {
        }
        
        public EnviarLoteEventosRequest(Vertech.apiEnviaLote.EnviarLoteEventosRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0")]
    public partial class EnviarLoteEventosRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement loteEventos;
        
        public EnviarLoteEventosRequestBody() {
        }
        
        public EnviarLoteEventosRequestBody(System.Xml.Linq.XElement loteEventos) {
            this.loteEventos = loteEventos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnviarLoteEventosResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnviarLoteEventosResponse", Namespace="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0", Order=0)]
        public Vertech.apiEnviaLote.EnviarLoteEventosResponseBody Body;
        
        public EnviarLoteEventosResponse() {
        }
        
        public EnviarLoteEventosResponse(Vertech.apiEnviaLote.EnviarLoteEventosResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.esocial.gov.br/servicos/empregador/lote/eventos/envio/v1_1_0")]
    public partial class EnviarLoteEventosResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement EnviarLoteEventosResult;
        
        public EnviarLoteEventosResponseBody() {
        }
        
        public EnviarLoteEventosResponseBody(System.Xml.Linq.XElement EnviarLoteEventosResult) {
            this.EnviarLoteEventosResult = EnviarLoteEventosResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicoEnviarLoteEventosChannel : Vertech.apiEnviaLote.ServicoEnviarLoteEventos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEnviarLoteEventosClient : System.ServiceModel.ClientBase<Vertech.apiEnviaLote.ServicoEnviarLoteEventos>, Vertech.apiEnviaLote.ServicoEnviarLoteEventos {
        
        public ServicoEnviarLoteEventosClient() {
        }
        
        public ServicoEnviarLoteEventosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicoEnviarLoteEventosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEnviarLoteEventosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEnviarLoteEventosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Vertech.apiEnviaLote.EnviarLoteEventosResponse Vertech.apiEnviaLote.ServicoEnviarLoteEventos.EnviarLoteEventos(Vertech.apiEnviaLote.EnviarLoteEventosRequest request) {
            return base.Channel.EnviarLoteEventos(request);
        }
        
        public System.Xml.Linq.XElement EnviarLoteEventos(System.Xml.Linq.XElement loteEventos) {
            Vertech.apiEnviaLote.EnviarLoteEventosRequest inValue = new Vertech.apiEnviaLote.EnviarLoteEventosRequest();
            inValue.Body = new Vertech.apiEnviaLote.EnviarLoteEventosRequestBody();
            inValue.Body.loteEventos = loteEventos;
            Vertech.apiEnviaLote.EnviarLoteEventosResponse retVal = ((Vertech.apiEnviaLote.ServicoEnviarLoteEventos)(this)).EnviarLoteEventos(inValue);
            return retVal.Body.EnviarLoteEventosResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Vertech.apiEnviaLote.EnviarLoteEventosResponse> Vertech.apiEnviaLote.ServicoEnviarLoteEventos.EnviarLoteEventosAsync(Vertech.apiEnviaLote.EnviarLoteEventosRequest request) {
            return base.Channel.EnviarLoteEventosAsync(request);
        }
        
        public System.Threading.Tasks.Task<Vertech.apiEnviaLote.EnviarLoteEventosResponse> EnviarLoteEventosAsync(System.Xml.Linq.XElement loteEventos) {
            Vertech.apiEnviaLote.EnviarLoteEventosRequest inValue = new Vertech.apiEnviaLote.EnviarLoteEventosRequest();
            inValue.Body = new Vertech.apiEnviaLote.EnviarLoteEventosRequestBody();
            inValue.Body.loteEventos = loteEventos;
            return ((Vertech.apiEnviaLote.ServicoEnviarLoteEventos)(this)).EnviarLoteEventosAsync(inValue);
        }
    }
}
